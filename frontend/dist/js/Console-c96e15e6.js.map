{"version":3,"file":"Console-c96e15e6.js","sources":["../../src/components/server/Console.vue"],"sourcesContent":["<script setup>\nimport { ref, inject, onMounted, onUnmounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Icon from '@/components/ui/Icon.vue'\nimport TextField from '@/components/ui/TextField.vue'\n\nimport ConsoleWorker from '@/utils/consoleWorker.js?worker&inline'\nconst worker = new ConsoleWorker()\nlet lastElem = null\n\nconst { t } = useI18n()\nconst config = inject('config')\nconst panelName = config.branding.name\n\nconst command = ref('')\nconst console = ref(null)\nlet lastMessageTime = 0\n\nconst props = defineProps({\n  server: { type: Object, required: true }\n})\n\nlet unbindEvent = null\nlet task = null\nonMounted(async () => {\n  worker.addEventListener(\"message\", onWorkerMessage)\n  unbindEvent = props.server.on('console', onMessage)\n\n  onMessage(await props.server.getConsole())\n  task = props.server.startTask(async () => {\n    if (props.server.needsPolling() && props.server.hasScope('server.console')) {\n      onMessage(await props.server.getConsole(lastMessageTime))\n    }\n  }, 5000)\n})\n\nonUnmounted(() => {\n  if (unbindEvent) unbindEvent()\n  if (task) props.server.stopTask(task)\n  clearConsole()\n})\n\nfunction onMessage(e) {\n  if ('epoch' in e) {\n    lastMessageTime = e.epoch\n  } else {\n    lastMessageTime = Date.now()\n  }\n  worker.postMessage({ ...e, panelName })\n}\n\nfunction onWorkerMessage(e) {\n  const newElems = []\n  e.data.map(update => {\n    if (update.op === 'update' && lastElem) {\n      lastElem.innerHTML = update.content\n    } else {\n      const el = document.createElement('div')\n      el.innerHTML = update.content\n      newElems.push(el)\n      lastElem = el\n    }\n  })\n  if (newElems + console.value.children.length > 1200) {\n    let elems = console.value.children.concat(newElems)\n    elems = elems.slice(elems.length - 1000, elems.length)\n    console.value.replaceChildren(elems)\n  } else {\n    console.value.append(...newElems)\n  }\n}\n\nfunction clearConsole() {\n  if (console.value) console.value.replaceChildren([])\n}\n\nfunction sendCommand() {\n  props.server.sendCommand(command.value)\n  command.value = ''\n}\n</script>\n\n<template>\n  <div>\n    <h2 v-text=\"t('servers.Console')\" />\n    <icon v-if=\"server.hasScope('server.console')\" v-hotkey=\"'c x'\" name=\"clear-console\" @click=\"clearConsole()\" />\n    <div v-if=\"server.hasScope('server.console')\" dir=\"ltr\" class=\"console-wrapper\">\n      <div ref=\"console\" class=\"console\" />\n    </div>\n    <div v-if=\"server.hasScope('server.console.send')\" dir=\"ltr\" class=\"command\">\n      <text-field v-model=\"command\" v-hotkey=\"'c c'\" :label=\"t('servers.Command')\" @keyup.enter=\"sendCommand()\" />\n      <icon name=\"send\" @click=\"sendCommand()\" />\n    </div>\n  </div>\n</template>\n"],"names":["ConsoleWorker"],"mappings":"0uoBAOM,EAAS,GAAIA,GACnB,GAAI,GAAW,KAEf,KAAM,CAAE,KAAM,IAER,EAAY,AADH,EAAO,UACG,SAAS,KAE5B,EAAU,EAAI,IACd,EAAU,EAAI,MACpB,GAAI,GAAkB,EAMlB,EAAc,KACd,EAAO,KACX,EAAU,SAAY,CACpB,EAAO,iBAAiB,UAAW,GACnC,EAAc,EAAM,OAAO,GAAG,UAAW,GAEzC,EAAU,KAAM,GAAM,OAAO,cAC7B,EAAO,EAAM,OAAO,UAAU,SAAY,CACxC,AAAI,EAAM,OAAO,gBAAkB,EAAM,OAAO,SAAS,mBACvD,EAAU,KAAM,GAAM,OAAO,WAAW,KAEzC,OAGL,EAAY,IAAM,CAChB,AAAI,GAAa,IACb,GAAM,EAAM,OAAO,SAAS,GAChC,MAGF,WAAmB,EAAG,CACpB,AAAI,SAAW,GACb,EAAkB,EAAE,MAEpB,EAAkB,KAAK,MAEzB,EAAO,YAAY,OAAK,GAAL,CAAQ,eAG7B,WAAyB,EAAG,CAC1B,KAAM,GAAW,GAWjB,GAVA,EAAE,KAAK,IAAI,GAAU,CACnB,GAAI,EAAO,KAAO,UAAY,EAC5B,EAAS,UAAY,EAAO,YACvB,CACL,KAAM,GAAK,SAAS,cAAc,OAClC,EAAG,UAAY,EAAO,QACtB,EAAS,KAAK,GACd,EAAW,KAGX,EAAW,EAAQ,MAAM,SAAS,OAAS,KAAM,CACnD,GAAI,GAAQ,EAAQ,MAAM,SAAS,OAAO,GAC1C,EAAQ,EAAM,MAAM,EAAM,OAAS,IAAM,EAAM,QAC/C,EAAQ,MAAM,gBAAgB,OAE9B,GAAQ,MAAM,OAAO,GAAG,GAI5B,YAAwB,CACtB,AAAI,EAAQ,OAAO,EAAQ,MAAM,gBAAgB,IAGnD,YAAuB,CACrB,EAAM,OAAO,YAAY,EAAQ,OACjC,EAAQ,MAAQ"}