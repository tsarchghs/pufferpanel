{"version":3,"file":"Suggestion-7a5f46c0.js","sources":["../../src/components/ui/Suggestion.vue"],"sourcesContent":["<script setup>\nimport { ref } from 'vue'\nimport TextField from './TextField.vue'\n\ndefineProps({\n  // default to random id as labels need target ids to exist exactly once\n  id: { type: String, default: () => (Math.random() + 1).toString(36).substring(2) },\n  disabled: { type: Boolean, default: () => false },\n  label: { type: String, default: () => undefined },\n  hint: { type: String, default: () => undefined },\n  error: { type: String, default: () => undefined },\n  name: { type: String, default: () => undefined },\n  type: { type: String, default: () => 'text' },\n  icon: { type: String, default: () => undefined },\n  autofocus: { type: Boolean, default: () => false },\n  labelProp: { type: String, default: () => 'label' },\n  options: { type: Array, default: () => [] },\n  modelValue: { type: [String, Number], default: () => '' }\n})\n\nconst emit = defineEmits(['blur', 'focus', 'update:modelValue'])\n\nconst open = ref(false)\n\nfunction onInput(e) {\n  emit('update:modelValue', e)\n}\n\nfunction onBlur(e) {\n  // closing too fast makes clicking on an option not fire correctly\n  // as the field is losing focus first, so wait for click events for a moment\n  setTimeout(() => open.value = false, 250)\n  emit('blur', e)\n}\n\nfunction onFocus(e) {\n  open.value = true\n  emit('focus', e)\n}\n</script>\n\n<template>\n  <div :class=\"['suggestions', open ? 'open' : 'closed']\">\n    <text-field :id=\"id\" :model-value=\"modelValue\" :disabled=\"disabled\" :label=\"label\" :hint=\"hint\" :error=\"error\" :name=\"name\" :type=\"type\" :icon=\"icon\" :autofocus=\"autofocus\" @blur=\"onBlur\" @focus=\"onFocus\" @update:modelValue=\"onInput\" />\n    <div class=\"suggestions-list\">\n      <div v-for=\"option in options\" :key=\"typeof option === 'object' ? option.value : option\" class=\"suggestion\" @click=\"onInput(typeof option === 'object' ? option.value : option)\" v-text=\"typeof option === 'object' ? option[labelProp] || option.value : option\" />\n    </div>\n  </div>\n</template>\n"],"names":[],"mappings":"2vBAsBA,KAAM,GAAO,EAAI,IAEjB,WAAiB,EAAG,CAClB,EAAK,oBAAqB,GAG5B,WAAgB,EAAG,CAGjB,WAAW,IAAM,EAAK,MAAQ,GAAO,KACrC,EAAK,OAAQ,GAGf,WAAiB,EAAG,CAClB,EAAK,MAAQ,GACb,EAAK,QAAS"}