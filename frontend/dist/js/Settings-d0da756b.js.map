{"version":3,"file":"Settings-d0da756b.js","sources":["../../src/components/server/Settings.vue"],"sourcesContent":["<script setup>\nimport { ref, inject, onMounted, computed } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Btn from '@/components/ui/Btn.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport Toggle from '@/components/ui/Toggle.vue'\nimport Variables from '@/components/ui/Variables.vue'\n\nconst { t, te, locale } = useI18n()\nconst toast = inject('toast')\n\nconst props = defineProps({\n  server: { type: Object, required: true }\n})\n\nconst vars = ref({})\nconst flags = ref({})\nconst anyItems = computed(() => {\n  if (Object.keys(vars.value).length > 0) return true\n  if (Object.keys(flags.value).length > 0) return true\n  return false\n})\n\nonMounted(async () => {\n  if (props.server.hasScope('server.definition.view')) {\n    vars.value = (await props.server.getDefinition())\n  } else if (props.server.hasScope('server.data.view')) {\n    vars.value = (await props.server.getData()) || {}\n  }\n  if (props.server.hasScope('server.flags.view'))\n    flags.value = (await props.server.getFlags()) || {}\n})\n\nasync function save() {\n  const data = {}\n  Object.keys(vars.value.data).map(name => {\n    data[name] = vars.value.data[name].value\n  })\n  if (props.server.hasScope('server.data.edit.admin')) {\n    await props.server.adminUpdateData(data)\n  } else if (props.server.hasScope('server.data.edit')) {\n    await props.server.updateData(data)\n  }\n  if (props.server.hasScope('server.flags.edit'))\n    await props.server.setFlags(flags.value)\n  toast.success(t('servers.SettingsSaved'))\n}\n\nfunction getFlagHint(name) {\n  if (te(`servers.flags.hint.${name}`, locale))\n    return t(`servers.flags.hint.${name}`)\n}\n</script>\n\n<template>\n  <div>\n    <h2 v-text=\"t('servers.Settings')\" />\n    <variables v-model=\"vars\" :disabled=\"!server.hasScope('server.data.edit')\" />\n    <div class=\"group-header\">\n      <div class=\"title\">\n        <h3 v-text=\"t('servers.FlagsHeader')\" />\n      </div>\n    </div>\n    <div v-for=\"(_, name) in flags\" :key=\"name\">\n      <toggle v-model=\"flags[name]\" :disabled=\"!server.hasScope('server.flags.edit')\" :label=\"t(`servers.flags.${name}`)\" :hint=\"getFlagHint()\" />\n    </div>\n    <span v-if=\"!anyItems\" v-text=\"t('servers.NoSettings')\" />\n    <btn v-else color=\"primary\" @click=\"save()\"><icon name=\"save\" />{{ t('servers.SaveSettings') }}</btn>\n  </div>\n</template>\n"],"names":[],"mappings":"ufAQM,CAAE,EAAG,KAAI,UAAW,IACpB,EAAQ,EAAO,SAMf,EAAO,EAAI,IACX,EAAQ,EAAI,IACZ,EAAW,EAAS,IACpB,OAAO,KAAK,EAAK,OAAO,OAAS,GACjC,OAAO,KAAK,EAAM,OAAO,OAAS,GAIxC,EAAU,SAAY,CACpB,AAAI,EAAM,OAAO,SAAS,0BACxB,EAAK,MAAS,KAAM,GAAM,OAAO,gBACxB,EAAM,OAAO,SAAS,qBAC/B,GAAK,MAAS,KAAM,GAAM,OAAO,WAAc,IAE7C,EAAM,OAAO,SAAS,sBACxB,GAAM,MAAS,KAAM,GAAM,OAAO,YAAe,MAGrD,kBAAsB,CACpB,KAAM,GAAO,GACb,OAAO,KAAK,EAAK,MAAM,MAAM,IAAI,GAAQ,CACvC,EAAK,GAAQ,EAAK,MAAM,KAAK,GAAM,QAErC,AAAI,EAAM,OAAO,SAAS,0BACxB,KAAM,GAAM,OAAO,gBAAgB,GAC1B,EAAM,OAAO,SAAS,qBAC/B,KAAM,GAAM,OAAO,WAAW,GAE5B,EAAM,OAAO,SAAS,sBACxB,KAAM,GAAM,OAAO,SAAS,EAAM,OACpC,EAAM,QAAQ,EAAE,0BAGlB,WAAqB,EAAM,CACzB,GAAI,EAAG,sBAAsB,IAAQ,GACnC,MAAO,GAAE,sBAAsB"}