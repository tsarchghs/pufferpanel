{"version":3,"file":"RunConfig-a666fd53.js","sources":["../../src/components/template/Variables.vue","../../src/utils/operators.js","../../src/components/ui/ListInput.vue","../../src/components/template/Operator.vue","../../src/components/template/OperatorList.vue","../../src/components/template/Install.vue","../../src/components/template/Hooks.vue","../../src/components/template/RunConfig.vue"],"sourcesContent":["<script setup>\nimport { ref, computed, onUpdated } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Btn from '@/components/ui/Btn.vue'\nimport Dropdown from '@/components/ui/Dropdown.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport KeyValueInput from '@/components/ui/KeyValueInput.vue'\nimport Overlay from '@/components/ui/Overlay.vue'\nimport TextField from '@/components/ui/TextField.vue'\nimport Toggle from '@/components/ui/Toggle.vue'\n\nconst props = defineProps({\n  modelValue: { type: String, required: true }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst { t } = useI18n()\n\nconst template = ref(JSON.parse(props.modelValue))\nif (Array.isArray(template.value.groups)) {\n  template.value.groups.sort((a, b) => a.order > b.order ? 1 : -1)\n}\nconst editOpen = ref(false)\nconst edit = ref({})\nconst addGroupOpen = ref(false)\nconst newGroup = ref({\n  display: '',\n  description: ''\n})\nconst changeVarGroupOpen = ref(false)\nconst changeVarGroup = ref({})\nconst editGroupOpen = ref(false)\nconst editGroup = ref({})\nconst editGroupIndex = ref(0)\n\nconst grouplessVars = computed(() => {\n  if (Array.isArray(template.value.groups)) {\n    return Object.keys(template.value.data).filter(varname => {\n      return template.value.groups.map(g => g.variables).flat().indexOf(varname) === -1\n    })\n  } else {\n    return Object.keys(template.value.data)\n  }\n})\n\nconst groupSelectOptions = computed(() => {\n  return (template.value.groups || []).map(group => {\n    return { value: group.order, label: group.display }\n  })\n})\n\nfunction update() {\n  emit('update:modelValue', JSON.stringify(template.value, undefined, 4))\n}\n\nfunction add(group) {\n  edit.value = {\n    name: '',\n    display: '',\n    desc: '',\n    type: 'string',\n    value: '',\n    internal: false,\n    required: false,\n    userEdit: false,\n    options: {},\n    group\n  }\n  editOpen.value = true\n}\n\nfunction startEditGroup(index) {\n  editGroupIndex.value = index\n  editGroup.value = template.value.groups[index]\n  editGroupOpen.value = true\n}\n\nfunction cancelEditGroup() {\n  editGroupIndex.value = 0\n  editGroup.value = {}\n  editGroupOpen.value = false\n}\n\nfunction confirmEditGroup() {\n  template.value.groups[editGroupIndex.value] = editGroup.value\n  update()\n  cancelEditGroup()\n}\n\nfunction startEdit(name) {\n  edit.value = template.value.data[name]\n  edit.value.name = name\n  edit.value.oldName = name\n  if (!edit.value.display) edit.value.display = ''\n  if (!edit.value.desc) edit.value.desc = ''\n  if (!edit.value.type) edit.value.type = 'string'\n  if (!edit.value.value) edit.value.value = ''\n  if (!edit.value.internal) edit.value.internal = false\n  if (!edit.value.required) edit.value.required = false\n  if (!edit.value.userEdit) edit.value.userEdit = false\n  if (!edit.value.options) {\n    edit.value.options = {}\n  } else {\n    const o = {}\n    edit.value.options.map(e => {\n      o[e.value] = e.display\n    })\n    edit.value.options = o\n  }\n  editOpen.value = true\n}\n\nfunction cancelEdit() {\n  editOpen.value = false\n  edit.value = {}\n}\n\nfunction confirmEdit() {\n  editOpen.value = false\n  if (edit.value.oldName && edit.value.oldName !== edit.value.name) {\n    delete template.value.data[edit.value.oldName]\n  }\n  const name = edit.value.name\n  delete edit.value.name\n  if (edit.value.oldName) delete edit.value.oldName\n  if (edit.value.type === 'boolean' || Object.keys(edit.value.options).length === 0) {\n    delete edit.value.options\n  } else {\n    const o = []\n    Object.keys(edit.value.options).map(k => {\n      o.push({ value: k, display: edit.value.options[k] })\n    })\n    edit.value.options = o\n  }\n  if (edit.value.group != undefined) {\n    template.value.groups = template.value.groups.map(group => {\n      if (group === edit.value.group) {\n        group.variables.push(name)\n      }\n      return group\n    })\n    delete edit.value.group\n  }\n  template.value.data[name] = edit.value\n  edit.value = {}\n  update()\n}\n\nfunction remove(name) {\n  delete template.value.data[name]\n  if (Array.isArray(template.value.groups)) {\n    template.value.groups = template.value.groups.map(group => {\n      const variables = group.variables.filter(v => v !== name)\n      return { ...group, variables }\n    })\n  }\n  update()\n}\n\nfunction isFirstGroup(order) {\n  let min = Infinity\n  template.value.groups.map(group => {\n    if (group.order < min) min = group.order\n  })\n  return min === order\n}\n\nfunction getLastGroup() {\n  let max = -Infinity\n  template.value.groups.map(group => {\n    if (group.order > max) max = group.order\n  })\n  return max === -Infinity ? 0 : max\n}\n\nfunction isLastGroup(order) {\n  return getLastGroup(order) === order\n}\n\nfunction moveGroupUp(order) {\n  template.value.groups = template.value.groups.map(group => {\n    if (group.order === order) {\n      group.order = order - 1\n    } else if (group.order === (order - 1)) {\n      group.order = order\n    }\n    return group\n  }).sort((a, b) => a.order > b.order ? 1 : -1)\n  update()\n}\n\nfunction moveGroupDown(order) {\n  template.value.groups = template.value.groups.map(group => {\n    if (group.order === order) {\n      group.order = order + 1\n    } else if (group.order === (order + 1)) {\n      group.order = order\n    }\n    return group\n  }).sort((a, b) => a.order > b.order ? 1 : -1)\n  update()\n}\n\nfunction resetGroupAdd() {\n  addGroupOpen.value = false\n  newGroup.value.display = ''\n  newGroup.value.description = ''\n}\n\nfunction addGroup() {\n  if (!Array.isArray(template.value.groups))\n    template.value.groups = []\n  template.value.groups.push({\n    variables: [],\n    order: getLastGroup() + 1,\n    display: newGroup.value.display,\n    description: newGroup.value.description\n  })\n  resetGroupAdd()\n  update()\n}\n\nfunction removeGroup(group) {\n  template.value.groups = template.value.groups.filter(g => g !== group)\n  update()\n}\n\nfunction changeGroup(variable, currentGroup) {\n  changeVarGroup.value = {\n    variable,\n    currentGroup,\n    selected: currentGroup ? { value: currentGroup.order, label: currentGroup.display } : {}\n  }\n  changeVarGroupOpen.value = true\n}\n\nfunction resetChangeVarGroup() {\n  changeVarGroupOpen.value = false\n  changeVarGroup.value = {}\n}\n\nfunction confirmChangeVarGroup() {\n  template.value.groups = template.value.groups.map(group => {\n    if (group === changeVarGroup.value.currentGroup) {\n      group.variables = group.variables.filter(v => v != changeVarGroup.value.variable)\n    } else if (group.order === changeVarGroup.value.selected.value && group.display === changeVarGroup.value.selected.label) {\n      group.variables.push(changeVarGroup.value.variable)\n    }\n    return group\n  })\n  resetChangeVarGroup()\n  update()\n}\n\nfunction nameValid() {\n  return edit.value.name.trim() !== ''\n}\n\nonUpdated(() => {\n  try {\n    const u = JSON.parse(props.modelValue)\n    // reserializing to avoid issues due to formatting\n    if (JSON.stringify(template.value) !== JSON.stringify(u)) {\n      template.value = u\n      if (Array.isArray(template.value.groups)) {\n        template.value.groups.sort((a, b) => a.order > b.order ? 1 : -1)\n      }\n    }\n  } catch {\n    // expected failure caused by json editor producing invalid json during modification\n  }\n})\n\nconst types = [\n  { value: 'string', label: t('templates.variables.types.String') },\n  { value: 'boolean', label: t('templates.variables.types.Boolean') },\n  { value: 'integer', label: t('templates.variables.types.Number') },\n  { value: 'options', label: t('templates.variables.types.Options') }\n]\n\nconst supportsOptions = {\n  string: true,\n  options: true\n}\n</script>\n\n<template>\n  <div class=\"variables\">\n    <div class=\"hint\" v-text=\"t('templates.description.Variables')\" />\n    <div v-if=\"template.groups && template.groups.length > 0\">\n      <div v-for=\"(group, index) in template.groups\" :key=\"group.order\">\n        <div class=\"group-header\">\n          <div class=\"title\">\n            <h3 v-text=\"group.display\" />\n            <div class=\"hint\" v-text=\"group.description\" />\n          </div>\n          <btn variant=\"icon\" :tooltip=\"t('templates.variables.EditGroup')\" @click=\"startEditGroup(index)\"><icon name=\"edit\" /></btn>\n          <btn variant=\"icon\" :tooltip=\"t('templates.AddVariable')\" @click=\"add(group)\"><icon name=\"plus\" /></btn>\n          <btn :disabled=\"isFirstGroup(group.order)\" variant=\"icon\" @click=\"moveGroupUp(group.order)\"><icon name=\"up\" /></btn>\n          <btn :disabled=\"isLastGroup(group.order)\" variant=\"icon\" @click=\"moveGroupDown(group.order)\"><icon name=\"down\" /></btn>\n          <btn variant=\"icon\" :tooltip=\"t('templates.variables.RemoveGroup')\" @click=\"removeGroup(group)\"><icon name=\"close\" /></btn>\n        </div>\n        <ul class=\"list\">\n          <li v-for=\"name in group.variables\" :key=\"name\" class=\"list-item clickable\" @click=\"startEdit(name)\">\n            <div class=\"list-item-content\">\n              <span v-text=\"template.data[name].display\" />\n              <btn variant=\"icon\" :tooltip=\"t('templates.variables.MoveToGroup')\" @click.stop=\"changeGroup(name, group)\"><icon name=\"select-group\" /></btn>\n              <btn variant=\"icon\" :tooltip=\"t('templates.variables.Remove')\" @click.stop=\"remove(name)\"><icon name=\"remove\" /></btn>\n            </div>\n          </li>\n        </ul>\n        <hr v-if=\"!isLastGroup(group.order) || grouplessVars.length > 0\" />\n      </div>\n      <div v-if=\"grouplessVars.length > 0\">\n        <div class=\"group-header\">\n          <h3 class=\"title\" v-text=\"t('templates.NoGroup')\" />\n          <btn variant=\"icon\" @click=\"add()\"><icon name=\"plus\" /></btn>\n        </div>\n        <ul class=\"list\">\n          <li v-for=\"name in grouplessVars\" :key=\"name\" class=\"list-item clickable\" @click=\"startEdit(name)\">\n            <div class=\"list-item-content\">\n              <span v-text=\"template.data[name].display\" />\n              <btn variant=\"icon\" @click.stop=\"changeGroup(name)\"><icon name=\"select-group\" /></btn>\n              <btn variant=\"icon\" @click.stop=\"remove(name)\"><icon name=\"remove\" /></btn>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div v-else>\n      <ul class=\"list\">\n        <li v-for=\"(item, name) in template.data\" :key=\"name\" class=\"list-item clickable\" @click=\"startEdit(name)\">\n          <div class=\"list-item-content\">\n            <span v-text=\"item.display\" />\n            <btn variant=\"icon\" @click.stop=\"remove(name)\"><icon name=\"remove\" /></btn>\n          </div>\n        </li>\n      </ul>\n      <btn variant=\"text\" @click=\"add()\"><icon name=\"plus\" />{{ t('templates.AddVariable') }}</btn>\n    </div>\n    <btn variant=\"text\" @click=\"addGroupOpen = true\"><icon name=\"plus\" />{{ t('templates.AddVariableGroup') }}</btn>\n\n    <overlay v-model=\"editOpen\">\n      <text-field v-model=\"edit.name\" :label=\"t('common.Name')\" />\n      <text-field v-model=\"edit.display\" :label=\"t('templates.Display')\" />\n      <text-field v-model=\"edit.desc\" :label=\"t('templates.variables.Description')\" />\n      <dropdown v-model=\"edit.type\" :label=\"t('templates.variables.Type')\" :options=\"types\" />\n      <text-field v-model=\"edit.value\" :label=\"t('templates.variables.Value')\" />\n      <toggle v-model=\"edit.internal\" :label=\"t('templates.variables.Internal')\" />\n      <toggle v-model=\"edit.required\" :label=\"t('templates.variables.Required')\" />\n      <toggle v-model=\"edit.userEdit\" :label=\"t('templates.variables.UserEdit')\" />\n      <key-value-input v-if=\"supportsOptions[edit.type]\" v-model=\"edit.options\" :label=\"t('templates.variables.Options')\" />\n\n      <div class=\"actions\">\n        <btn color=\"error\" @click=\"cancelEdit()\"><icon name=\"close\" />{{ t('common.Cancel') }}</btn>\n        <btn color=\"primary\" :disabled=\"!nameValid()\" @click=\"confirmEdit()\"><icon name=\"check\" />{{ t('common.Apply') }}</btn>\n      </div>\n    </overlay>\n\n    <overlay v-model=\"addGroupOpen\">\n      <text-field v-model=\"newGroup.display\" :label=\"t('templates.Display')\" />\n      <text-field v-model=\"newGroup.description\" :label=\"t('templates.variables.Description')\" />\n      <text-field v-model=\"newGroup.if\" :label=\"t('common.Condition')\" :hint=\"t('templates.variables.ConditionHint')\" />\n      <div class=\"actions\">\n        <btn color=\"error\" @click=\"resetGroupAdd()\"><icon name=\"close\" />{{ t('common.Cancel') }}</btn>\n        <btn color=\"primary\" :disabled=\"newGroup.display.trim() === ''\" @click=\"addGroup()\"><icon name=\"check\" />{{ t('common.Apply') }}</btn>\n      </div>\n    </overlay>\n\n    <overlay v-model=\"editGroupOpen\">\n      <text-field v-model=\"editGroup.display\" :label=\"t('templates.Display')\" />\n      <text-field v-model=\"editGroup.description\" :label=\"t('templates.variables.Description')\" />\n      <text-field v-model=\"editGroup.if\" :label=\"t('common.Condition')\" :hint=\"t('templates.variables.ConditionHint')\" />\n      <div class=\"actions\">\n        <btn color=\"error\" @click=\"cancelEditGroup()\"><icon name=\"close\" />{{ t('common.Cancel') }}</btn>\n        <btn color=\"primary\" :disabled=\"editGroup.display.trim() === ''\" @click=\"confirmEditGroup()\"><icon name=\"check\" />{{ t('common.Apply') }}</btn>\n      </div>\n    </overlay>\n\n    <overlay v-model=\"changeVarGroupOpen\" class=\"select-var-group\" :title=\"t('templates.variables.MoveToGroup')\">\n      <dropdown v-model=\"changeVarGroup.selected\" :options=\"groupSelectOptions\" :object=\"true\" />\n\n      <div class=\"actions\">\n        <btn color=\"error\" @click=\"resetChangeVarGroup()\"><icon name=\"close\" />{{ t('common.Cancel') }}</btn>\n        <btn color=\"primary\" @click=\"confirmChangeVarGroup()\"><icon name=\"check\" />{{ t('common.Apply') }}</btn>\n      </div>\n    </overlay>\n  </div>\n</template>\n","export function generateOperatorLabel(t, o) {\n  let c = 0\n  let params = { ...o }\n  switch(o.type) {\n    case \"download\":\n      c = Array.isArray(o.files) ? o.files.length : 1\n      if (c === 1) params.file = Array.isArray(o.files) ? o.files[0] : o.files\n      return t(`operators.${o.type}.formatted`, params, c)\n    case \"command\":\n      c = Array.isArray(o.commands) ? o.commands.length : 1\n      if (c === 1) params.command = Array.isArray(o.commands) ? o.commands[0] : o.commands\n      return t(`operators.${o.type}.formatted`, params, c)\n    default:\n      return t(`operators.${o.type}.formatted`, params, c)\n  }\n}\n\nexport const operators = {\n  download: [\n    {\n      name: 'files',\n      type: 'list',\n      default: []\n    }\n  ],\n  command: [\n    {\n      name: 'commands',\n      type: 'list',\n      default: []\n    }\n  ],\n  alterfile: [\n    {\n      name: 'file',\n      type: 'text',\n      label: 'templates.Filename',\n      default: ''\n    },\n    {\n      name: 'regex',\n      type: 'boolean',\n      default: true\n    },\n    {\n      name: 'search',\n      type: 'text',\n      default: ''\n    },\n    {\n      name: 'replace',\n      type: 'text',\n      default: ''\n    }\n  ],\n  writefile: [\n    {\n      name: 'target',\n      type: 'text',\n      label: 'templates.Filename',\n      default: ''\n    },\n    {\n      name: 'text',\n      type: 'textarea',\n      modeFile: 'target',\n      default: ''\n    }\n  ],\n  move: [\n    {\n      name: 'source',\n      type: 'text',\n      default: ''\n    },\n    {\n      name: 'target',\n      type: 'text',\n      default: ''\n    }\n  ],\n  mkdir: [\n    {\n      name: 'target',\n      type: 'text',\n      label: 'common.Name',\n      default: ''\n    }\n  ],\n  steamgamedl: [\n    {\n      name: 'appId',\n      type: 'text',\n      default: ''\n    }\n  ],\n  javadl: [\n    {\n      name: 'version',\n      type: 'text',\n      label: 'templates.Version',\n      default: ''\n    }\n  ],\n  mojangdl: [\n    {\n      name: 'version',\n      type: 'text',\n      label: 'templates.Version',\n      default: ''\n    },\n    {\n      name: 'target',\n      type: 'text',\n      label: 'templates.Filename',\n      default: ''\n    }\n  ],\n  forgedl: [\n    {\n      name: 'version',\n      type: 'text',\n      label: 'templates.Version',\n      default: ''\n    },\n    {\n      name: 'filename',\n      type: 'text',\n      label: 'templates.Filename',\n      default: ''\n    }\n  ],\n  spongeforgedl: [\n    {\n      name: 'releaseType',\n      type: 'text',\n      default: ''\n    }\n  ],\n  fabricdl: [\n    {\n      name: 'targetFile',\n      type: 'text',\n      label: 'templates.Filename',\n      default: ''\n    }\n  ]\n}\n","<script setup>\nimport { ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Btn from './Btn.vue'\nimport Icon from './Icon.vue'\nimport TextField from './TextField.vue'\n\nconst props = defineProps({\n  label: { type: String, default: () => undefined },\n  addLabel: { type: String, default: () => undefined },\n  hint: { type: String, default: () => undefined },\n  error: { type: String, default: () => undefined },\n  allowSwap: { type: Boolean, default: () => false },\n  modelValue: { type: Array, default: () => [] }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst { t } = useI18n()\n\nconst values = ref([ ...props.modelValue ])\n\nfunction emitUpdate() {\n  emit('update:modelValue', values)\n}\n\nfunction addEntry() {\n  values.value.push('')\n}\n\nfunction onInput(i, event) {\n  values.value[i] = event\n  emitUpdate()\n}\n\nfunction swap(i1, i2) {\n  const x = values.value[i1]\n  values.value[i1] = values.value[i2]\n  values.value[i2] = x\n  emitUpdate()\n}\n\nfunction removeEntry(i) {\n  values.value.splice(i, 1)\n  emitUpdate()\n}\n</script>\n\n<template>\n  <div class=\"list-input\">\n    <div v-if=\"label\" class=\"label\" v-text=\"label\" />\n    <div v-if=\"error\" class=\"error\" v-text=\"error\" />\n    <div v-else-if=\"hint\" class=\"hint\" v-text=\"hint\" />\n    <div v-for=\"(entry, index) in values\" :key=\"index\" :class=\"['entry', allowSwap ? 'swap' : '']\">\n      <text-field :model-value=\"entry\" @update:modelValue=\"onInput(index, $event)\" />\n      <btn v-if=\"allowSwap\" :disabled=\"index === 0\" variant=\"icon\" @click=\"swap(index, index-1)\"><icon name=\"up\" /></btn>\n      <btn v-if=\"allowSwap\" :disabled=\"index === values.length-1\" variant=\"icon\" @click=\"swap(index, index+1)\"><icon name=\"down\" /></btn>\n      <btn variant=\"icon\" @click=\"removeEntry(index)\"><icon name=\"remove\" /></btn>\n    </div>\n    <btn variant=\"text\" @click=\"addEntry()\"><icon name=\"plus\" />{{ addLabel || t('common.Add') }}</btn>\n  </div>\n</template>\n","<script setup>\nimport { ref } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { operators } from '@/utils/operators.js'\nimport Ace from '@/components/ui/Ace.vue'\nimport Dropdown from '@/components/ui/Dropdown.vue'\nimport ListInput from '@/components/ui/ListInput.vue'\nimport TextField from '@/components/ui/TextField.vue'\nimport Toggle from '@/components/ui/Toggle.vue'\n\nconst props = defineProps({\n  modelValue: { type: Object, required: true }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst { t } = useI18n()\n\nconst typeSelect = ref({})\nconst model = ref({ ...props.modelValue })\nconst types = Object.keys(operators).map(key => {\n  return { value: key, label: t(`operators.${key}.generic`) }\n})\n\nfunction update() {\n  emit('update:modelValue', model.value)\n}\n\nfunction typeChanged(newType) {\n  const m = { type: newType }\n  model.value.if ? m.if = model.value.if : m.if = ''\n  operators[newType].map(field => {\n    m[field.name] = field.default\n  })\n  model.value = m\n  update()\n}\n\nfunction getLabel(field) {\n  return field.label ? t(field.label) : t(`operators.${model.value.type}.${field.name}`)\n}\n</script>\n\n<template>\n  <div :class=\"['operator', typeSelect.isOpen ? 'typeselect-open' : '']\">\n    <dropdown ref=\"typeSelect\" v-model=\"model.type\" :options=\"types\" @update:modelValue=\"typeChanged\" />\n    <text-field v-model=\"model.if\" :label=\"t('common.Condition')\" :hint=\"t('operators.ConditionHint')\" @update:modelValue=\"update\" />\n    <div v-for=\"field in operators[model.type]\" :key=\"field.name\">\n      <text-field v-if=\"field.type === 'text'\" v-model=\"model[field.name]\" :label=\"getLabel(field)\" @update:modelValue=\"update\" />\n      <toggle v-if=\"field.type === 'boolean'\" v-model=\"model[field.name]\" :label=\"getLabel(field)\" @update:modelValue=\"update\" />\n      <ace v-if=\"field.type === 'textarea'\" :id=\"`var-${field.name}-editor`\" v-model=\"model[field.name]\" :file=\"field.modeFile ? model[field.modeFile] : undefined\" @update:modelValue=\"update\" />\n      <list-input v-if=\"field.type === 'list'\" v-model=\"model[field.name]\" :label=\"getLabel(field)\" allow-swap @update:modelValue=\"update\" />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { ref, onUpdated } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport { generateOperatorLabel } from '@/utils/operators.js'\nimport Btn from '@/components/ui/Btn.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport Operator from './Operator.vue'\nimport Overlay from '@/components/ui/Overlay.vue'\n\nconst props = defineProps({\n  addLabel: { type: String, default: () => undefined },\n  modelValue: { type: Array, required: true }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst { t } = useI18n()\n\nconst edit = ref({})\nconst editIndex = ref(0)\nconst editOpen = ref(false)\nconst model = ref([...props.modelValue])\n\nonUpdated(() => {\n  if (JSON.stringify(model.value) !== JSON.stringify(props.modelValue) && Array.isArray(props.modelValue))\n    model.value = [...props.modelValue]\n})\n\nfunction update() {\n  emit('update:modelValue', model.value)\n}\n\nfunction add() {\n  editIndex.value = model.value.length\n  edit.value = { type: 'command', commands: [] }\n  editOpen.value = true\n}\n\nfunction startEdit(i) {\n  editIndex.value = i\n  edit.value = model.value[i]\n  editOpen.value = true\n}\n\nfunction cancelEdit() {\n  editOpen.value = false\n  editIndex.value = 0\n  edit.value = {}\n}\n\nfunction confirmEdit() {\n  editOpen.value = false\n  model.value[editIndex.value] = edit.value\n  editIndex.value = 0\n  edit.value = {}\n  update()\n}\n\nfunction swap(i1, i2) {\n  const x = model.value[i1]\n  model.value[i1] = model.value[i2]\n  model.value[i2] = x\n  update()\n}\n\nfunction remove(i) {\n  model.value.splice(i, 1)\n  update()\n}\n</script>\n\n<template>\n  <div class=\"operators\">\n    <ul class=\"list\">\n      <li v-for=\"(step, index) in model\" :key=\"index\" class=\"list-item clickable\">\n        <div class=\"list-item-content\" @click=\"startEdit(index)\">\n          <div class=\"text\">\n            <span class=\"title\" v-text=\"generateOperatorLabel(t, step)\" />\n            <span v-if=\"step.if\" class=\"subline\" v-text=\"step.if\" />\n          </div>\n          <btn :disabled=\"index === 0\" variant=\"icon\" @click.stop=\"swap(index, index-1)\"><icon name=\"up\" /></btn>\n          <btn :disabled=\"index === model.length - 1\" variant=\"icon\" @click.stop=\"swap(index, index+1)\"><icon name=\"down\" /></btn>\n          <btn variant=\"icon\" @click.stop=\"remove(index)\"><icon name=\"remove\" /></btn>\n        </div>\n      </li>\n    </ul>\n    <btn variant=\"text\" @click=\"add()\"><icon name=\"plus\" />{{ addLabel || t('common.Add') }}</btn>\n    <overlay v-model=\"editOpen\">\n      <operator v-model=\"edit\" />\n      <div class=\"actions\">\n        <btn color=\"error\" @click=\"cancelEdit()\"><icon name=\"close\" />{{ t('common.Cancel') }}</btn>\n        <btn color=\"primary\" @click=\"confirmEdit()\"><icon name=\"save\" />{{ t('common.Save') }}</btn>\n      </div>\n    </overlay>\n  </div>\n</template>\n","<script setup>\nimport { ref, onUpdated } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport OperatorList from './OperatorList.vue'\n\nconst props = defineProps({\n  modelValue: { type: String, required: true }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst { t } = useI18n()\n\nconst template = ref(JSON.parse(props.modelValue))\nif (!template.value.install) template.value.install = []\n\nfunction update() {\n  emit('update:modelValue', JSON.stringify(template.value, undefined, 4))\n}\n\nonUpdated(() => {\n  try {\n    const u = JSON.parse(props.modelValue)\n    // reserializing to avoid issues due to formatting\n    if (JSON.stringify(template.value) !== JSON.stringify(u))\n      template.value = u\n  } catch {\n    // expected failure caused by json editor producing invalid json during modification\n  }\n})\n</script>\n\n<template>\n  <div class=\"install\">\n    <div class=\"hint\" v-text=\"t('templates.description.Install')\" />\n    <operator-list v-model=\"template.install\" :add-label=\"t('templates.AddInstallStep')\" @update:modelValue=\"update()\" />\n  </div>\n</template>\n","<script setup>\nimport { ref, onUpdated } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport OperatorList from './OperatorList.vue'\n\nconst props = defineProps({\n  modelValue: { type: String, required: true }\n})\n\nconst emit = defineEmits(['update:modelValue'])\n\nconst { t } = useI18n()\n\nconst template = ref(JSON.parse(props.modelValue))\nif (!template.value.run) template.value.run = {}\nif (!template.value.run.pre) template.value.run.pre = []\nif (!template.value.run.post) template.value.run.post = []\n\nfunction update() {\n  emit('update:modelValue', JSON.stringify(template.value, undefined, 4))\n}\n\nonUpdated(() => {\n  try {\n    const u = JSON.parse(props.modelValue)\n    // reserializing to avoid issues due to formatting\n    if (JSON.stringify(template.value) !== JSON.stringify(u))\n      template.value = u\n  } catch {\n    // expected failure caused by json editor producing invalid json during modification\n  }\n})\n</script>\n\n<template>\n  <div class=\"hooks\">\n    <div class=\"pre-run\">\n      <h2 v-text=\"t('templates.PreRunHook')\" />\n      <div class=\"hint\" v-text=\"t('templates.description.PreRunHook')\" />\n      <operator-list v-model=\"template.run.pre\" :add-label=\"t('templates.AddPreStep')\" @update:modelValue=\"update()\" />\n    </div>\n    <div class=\"post-run\">\n      <h2 v-text=\"t('templates.PostRunHook')\" />\n      <div class=\"hint\" v-text=\"t('templates.description.PostRunHook')\" />\n      <operator-list v-model=\"template.run.post\" :add-label=\"t('templates.AddPostStep')\" @update:modelValue=\"update()\" />\n    </div>\n  </div>\n</template>\n","<script setup>\nimport { ref, onMounted, onUpdated } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Btn from '@/components/ui/Btn.vue'\nimport Dropdown from '@/components/ui/Dropdown.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport KeyValueInput from '@/components/ui/KeyValueInput.vue'\nimport Overlay from '@/components/ui/Overlay.vue'\nimport Suggestion from '@/components/ui/Suggestion.vue'\nimport TextField from '@/components/ui/TextField.vue'\n\nconst props = defineProps({\n  modelValue: { type: String, required: true }\n})\n\nconst emit = defineEmits(['update:modelValue', 'valid'])\n\nconst { t } = useI18n()\n\nconst template = ref(JSON.parse(props.modelValue))\nconst commandInvalid = ref(false)\nconst editOpen = ref(false)\nconst editIndex = ref(0)\nconst edit = ref({})\nconst stopType = ref(stopTypeFromValue(template.value.run))\nconst stopTypes = [\n  { value: 'command', label: t('templates.StopCommand') },\n  { value: 'signal', label: t('templates.StopSignal') }\n]\nconst signalSuggestions = [\n  { value: '1', label: t('templates.signals.1') },\n  { value: '2', label: t('templates.signals.2') },\n  { value: '9', label: t('templates.signals.9') },\n  { value: '15', label: t('templates.signals.15') }\n]\n\nfunction stopTypeFromValue(run) {\n  if (run.stop || run.stop === '') return 'command'\n  return 'signal'\n}\n\nfunction update() {\n  const t = template.value\n  if (stopType.value === 'signal') {\n    t.run.stopCode = Number(t.run.stopCode)\n  }\n  emit('update:modelValue', JSON.stringify(t, undefined, 4))\n}\n\nfunction updateStopType() {\n  const t = template.value\n  if (stopType.value === 'command') {\n    delete t.run.stopCode\n    t.run.stop = ''\n  } else {\n    delete t.run.stop\n    t.run.stopCode = '2'\n  }\n  template.value = t\n  update()\n}\n\nfunction addCommand() {\n  if (!template.value.run.command) {\n    template.value.run.command = []\n  } else if (!Array.isArray(template.value.run.command)) {\n    const tmp = template.value.run.command\n    template.value.run.command = [{ command: tmp, if: '' }]\n  }\n  editIndex.value = template.value.run.command.length\n  edit.value = { command: '', if: '' }\n  editOpen.value = true\n}\n\nfunction swap(i1, i2) {\n  const x = template.value.run.command[i1]\n  template.value.run.command[i1] = template.value.run.command[i2]\n  template.value.run.command[i2] = x\n  update()\n}\n\nfunction remove(i) {\n  template.value.run.command.splice(i, 1)\n  update()\n}\n\nfunction startEdit(index) {\n  editIndex.value = index\n  edit.value = template.value.run.command[index]\n  editOpen.value = true\n}\n\nfunction cancelEdit() {\n  editOpen.value = false\n  editIndex.value = 0\n  edit.value = {}\n}\n\nfunction confirmEdit() {\n  editOpen.value = false\n  template.value.run.command[editIndex.value] = edit.value\n  editIndex.value = 0\n  edit.value = {}\n  update()\n}\n\nfunction validate() {\n  commandInvalid.value = false\n\n  if (!template.value.run.command) {\n    commandInvalid.value = true\n  } else if (Array.isArray(template.value.run.command) && template.value.run.command.length === 0) {\n    commandInvalid.value = true\n  } else if (!Array.isArray(template.value.run.command) && template.value.run.command.trim() === '') {\n    commandInvalid.value = true\n  }\n\n  emit('valid', !commandInvalid.value)\n}\n\nonMounted(() => {\n  validate()\n})\n\nonUpdated(() => {\n  try {\n    const u = JSON.parse(props.modelValue)\n    // reserializing to avoid issues due to formatting\n    if (JSON.stringify(template.value) !== JSON.stringify(u)) {\n      template.value = u\n      stopType.value = stopTypeFromValue(u.run)\n      validate()\n    }\n  } catch {\n    // expected failure caused by json editor producing invalid json during modification\n  }\n})\n</script>\n\n<template>\n  <div>\n    <ul v-if=\"Array.isArray(template.run.command)\" class=\"list\">\n      <li v-for=\"(cmd, index) in template.run.command\" :key=\"index\" class=\"list-item clickable\">\n        <div class=\"list-item-content\" @click=\"startEdit(index)\">\n          <div class=\"text\">\n            <span class=\"title\" v-text=\"cmd.command\" />\n            <span v-if=\"cmd.if\" class=\"subline\" v-text=\"cmd.if\" />\n          </div>\n          <btn :disabled=\"index === 0\" variant=\"icon\" @click.stop=\"swap(index, index-1)\"><icon name=\"up\" /></btn>\n          <btn :disabled=\"index === template.run.command.length - 1\" variant=\"icon\" @click.stop=\"swap(index, index+1)\"><icon name=\"down\" /></btn>\n          <btn variant=\"icon\" @click.stop=\"remove(index)\"><icon name=\"remove\" /></btn>\n        </div>\n      </li>\n    </ul>\n    <text-field v-else v-model=\"template.run.command\" icon=\"start\" :label=\"t('templates.Command')\" :hint=\"t('templates.description.Command')\" :error=\"commandInvalid ? t('templates.errors.CommandInvalid') : undefined\" @update:modelValue=\"update\" @blur=\"validate()\" />\n    <btn variant=\"text\" @click=\"addCommand()\"><icon name=\"plus\" />{{ t('templates.AddCommand') }}</btn>\n    <text-field v-model=\"template.run.workingDirectory\" icon=\"folder\" :label=\"t('templates.WorkingDirectory')\" @update:modelValue=\"update\" />\n    <dropdown v-model=\"stopType\" :options=\"stopTypes\" @update:modelValue=\"updateStopType\" />\n    <text-field v-if=\"stopType === 'command'\" v-model=\"template.run.stop\" icon=\"stop\" :label=\"t('templates.StopCommand')\" :hint=\"t('templates.description.StopCommand')\" @update:modelValue=\"update\" />\n    <suggestion v-else v-model=\"template.run.stopCode\" icon=\"stop\" :label=\"t('templates.StopSignal')\" :options=\"signalSuggestions\" :hint=\"t('templates.description.StopSignal')\" @update:modelValue=\"update\" />\n    <key-value-input v-model=\"template.run.environmentVars\" :label=\"t('templates.EnvVars')\" :add-label=\"t('templates.AddEnvVar')\" @update:modelValue=\"update\" />\n\n    <overlay v-model=\"editOpen\">\n      <text-field v-model=\"edit.if\" :label=\"t('common.Condition')\" :hint=\"t('templates.CommandConditionHint')\" />\n      <text-field v-model=\"edit.command\" :label=\"t('templates.Command')\" />\n      <div class=\"actions\">\n        <btn color=\"error\" @click=\"cancelEdit()\"><icon name=\"close\" />{{ t('common.Cancel') }}</btn>\n        <btn color=\"primary\" @click=\"confirmEdit()\"><icon name=\"save\" />{{ t('common.Save') }}</btn>\n      </div>\n    </overlay>\n  </div>\n</template>\n"],"names":[],"mappings":"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"}