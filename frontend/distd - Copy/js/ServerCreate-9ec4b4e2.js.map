{"version":3,"file":"ServerCreate-9ec4b4e2.js","sources":["../../src/components/ui/serverCreateSteps/SelectTemplate.vue","../../src/components/ui/serverCreateSteps/Environment.vue","../../src/components/ui/serverCreateSteps/Settings.vue","../../src/views/ServerCreate.vue"],"sourcesContent":["<script setup>\nimport { ref, inject, onMounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Btn from '@/components/ui/Btn.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport Overlay from '@/components/ui/Overlay.vue'\nimport markdown from '@/utils/markdown.js'\n\nconst { t } = useI18n()\nconst api = inject('api')\nconst emit = defineEmits(['selected', 'back'])\nconst templatesByRepo = ref([])\nconst showing = ref(false)\nconst currentTemplate = ref({})\n\nconst props = defineProps({\n  arch: { type: String, required: true },\n  env: { type: String, required: true },\n  os: { type: String, required: true }\n})\n\nfunction templateEnvMatches(template) {\n  if (!Array.isArray(template.supportedEnvironments)) {\n    if (!template.environment) return false // neither supported nor default env defined, ignore\n    template.supportedEnvironments = [template.environment]\n  }\n  if (template.supportedEnvironments.filter(e => e.type === props.env).length > 0) return true\n  return false\n}\n\nfunction templateOsMatches(template) {\n  if (!template.requirements || !template.requirements.os) return true\n  return template.requirements.os === props.os\n}\n\nfunction templateArchMatches(template) {\n  if (!template.requirements || !template.requirements.arch) return true\n  return template.requirements.arch === props.arch\n}\n\nasync function load() {\n  const repos = await api.template.listAllTemplates()\n  const res = []\n  Object.keys(repos).sort((a, b) => repos[a].id > repos[b].id).map(repo => {\n    if (repos[repo].templates.length === 0) return\n    const templates = repos[repo].templates.filter(template => {\n      return templateEnvMatches(template) &&\n        templateOsMatches(template) &&\n        templateArchMatches(template)\n    })\n    res.push({ ...repos[repo], templates })\n  })\n  templatesByRepo.value = res\n}\n\nonMounted(async () => {\n  load()\n})\n\nasync function show(repo, template) {\n  currentTemplate.value = await api.template.get(repo, template)\n  if (currentTemplate.value.readme) {\n    showing.value = true\n  } else {\n    // no readme, skip readme popup\n    emit('selected', currentTemplate.value)\n  }\n}\n\nfunction choice(confirm) {\n  showing.value = false\n  if (confirm) emit('selected', currentTemplate.value)\n}\n</script>\n\n<template>\n  <div class=\"select-template\">\n    <h2 v-text=\"t('servers.SelectTemplate')\" />\n    <div v-for=\"repo in templatesByRepo\" :key=\"repo.id\" class=\"list\">\n      <h3 class=\"list-header\" v-text=\"repo.name\" />\n      <div v-for=\"template in repo.templates\" :key=\"template.name\" class=\"list-item template\" @click=\"show(repo.id, template.name)\">\n        <span class=\"title\" v-text=\"template.display\" />\n      </div>\n    </div>\n    <btn color=\"error\" @click=\"emit('back')\"><icon name=\"back\" />{{ t('common.Back') }}</btn>\n\n    <overlay v-model=\"showing\" :title=\"currentTemplate.display\" closable>\n      <!-- eslint-disable-next-line vue/no-v-html -->\n      <div dir=\"ltr\" class=\"readme\" v-html=\"markdown(currentTemplate.readme)\" />\n      <div class=\"actions\">\n        <btn color=\"error\" @click=\"choice(false)\"><icon name=\"close\" />{{ t('common.Cancel') }}</btn>\n        <btn color=\"primary\" @click=\"choice(true)\"><icon name=\"check\" />{{ t('servers.SelectThisTemplate') }}</btn>\n      </div>\n    </overlay>\n  </div>\n</template>\n","<script setup>\nimport { ref, inject, onMounted, nextTick } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Multiselect from '@vueform/multiselect'\nimport Btn from '@/components/ui/Btn.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport Dropdown from '@/components/ui/Dropdown.vue'\nimport TextField from '@/components/ui/TextField.vue'\n\nconst { t } = useI18n()\nconst api = inject('api')\nconst emit = defineEmits(['confirm'])\n\nconst name = ref('')\nconst nameError = ref(null)\n\nconst nodes = ref([])\nconst node = ref(undefined)\nconst nodeFeatures = ref({})\n\nconst selectedEnv = ref('unsupported')\nconst availableEnvs = ref([])\nconst envError = ref(null)\nconst msEnv = ref(null)\n\nconst users = ref([])\nconst msUsers = ref(null)\n\ndefineProps({\n  nouser: { type: Boolean, default: () => true }\n})\n\nonMounted(async () => {\n  const self = await api.self.get()\n  nextTick(() => {\n    msUsers.value.select({ value: self.username, label: self.username })\n  })\n\n  nodes.value = (await api.node.list()).map(n => { return { value: n.id, label: n.name } })\n  node.value = nodes.value.length === 1 ? nodes.value[0].value : null\n\n  nodeChanged()\n})\n\nasync function nodeChanged() {\n  if (node.value === null || node.value === undefined) return\n  try {\n    envError.value = null\n    nodeFeatures.value = await api.node.features(node.value)\n    nodeFeatures.value.environments = nodeFeatures.value.environments.filter(env => {\n      if (env === 'docker') {\n        // only allow if the node is actually configured to talk to docker\n        return nodeFeatures.value.features.indexOf('docker') >= 0\n      } else if (env === 'tty' || env === 'standard') {\n        return false\n      } else {\n        return true\n      }\n    })\n\n    availableEnvs.value = nodeFeatures.value.environments.map(env => {\n      return { value: env, label: t(`env.${env}.name`) }\n    })\n\n    if (availableEnvs.value.length > 0) {\n      selectedEnv.value = availableEnvs.value[0].value\n    } else {\n      msEnv.value.select({ value: 'unsupported', label: '' })\n      envError.value = t('servers.NoSupportedEnvironmentOnSelectedNode')\n    }\n  } catch (e) {\n    // error asking for node features\n    // general error handling takes care of informing user\n    // we just need to set a proper error state\n    availableEnvs.value = []\n    msEnv.value.select({ value: 'unsupported', label: '' })\n    envError.value = t('servers.CannotFetchNodeEnvironments')\n  }\n}\n\nfunction validateEnvironment() {\n  return selectedEnv.value && selectedEnv.value !== 'unsupported'\n}\n\nfunction validateName() {\n  if (name.value.trim().match(/^[\\x20-\\x7e]+$/)) {\n    return true\n  }\n  return false\n}\n\nfunction nameBlur() {\n  if (validateName()) {\n    nameError.value = undefined\n  } else {\n    nameError.value = t('servers.NameInvalid')\n  }\n}\n\nasync function searchUsers(query) {\n  const res = await api.user.search(query)\n  return res.map(u => {\n    return {\n      value: u.username,\n      label: u.username\n    }\n  })\n}\n\nfunction validateUsers() {\n  return users.value.length > 0\n}\n\nfunction canSubmit() {\n  return validateName() && validateEnvironment() && validateUsers()\n}\n\nfunction confirm() {\n  if (!canSubmit()) return\n  emit('confirm',\n    name.value.trim(),\n    node.value,\n    nodeFeatures.value.os,\n    nodeFeatures.value.arch,\n    selectedEnv.value,\n    users.value\n  )\n}\n</script>\n\n<template>\n  <div class=\"environment\">\n    <text-field v-model=\"name\" :label=\"t('servers.Name')\" :error=\"nameError\" autofocus @blur=\"nameBlur()\" @change=\"nameError = undefined\" />\n    <div class=\"dropdown-wrapper\">\n      <div :class=\"['dropdown', !validateUsers() ? 'error' : '']\">\n        <multiselect\n          id=\"userselect\"\n          ref=\"msUsers\"\n          v-model=\"users\"\n          mode=\"tags\"\n          placeholder=\"t('server.SearchUsers')\"\n          :close-on-select=\"false\"\n          :can-clear=\"false\"\n          :filter-results=\"false\"\n          :min-chars=\"1\"\n          :resolve-on-load=\"false\"\n          :delay=\"500\"\n          :searchable=\"true\"\n          :options=\"searchUsers\"\n          :disabled=\"nouser\"\n        />\n        <label for=\"userselect\" @click=\"msUsers.open()\">{{ t('users.Users') }}</label>\n      </div>\n      <span v-if=\"!validateUsers()\" class=\"error\" v-text=\"t('servers.AtLeastOneUserRequired')\" />\n    </div>\n    <dropdown v-model=\"node\" :options=\"nodes\" :label=\"t('nodes.Node')\" @change=\"nodeChanged()\" />\n    <dropdown ref=\"msEnv\" v-model=\"selectedEnv\" :options=\"availableEnvs\" :label=\"t('servers.Environment')\" :error=\"envError\" />\n    <btn color=\"primary\" :disabled=\"!canSubmit()\" @click=\"confirm()\"><icon name=\"check\" />{{ t('common.Next') }}</btn>\n  </div>\n</template>\n","<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useI18n } from 'vue-i18n'\nimport Btn from '@/components/ui/Btn.vue'\nimport EnvironmentConfig from '@/components/ui/EnvironmentConfig.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport Variables from '@/components/ui/Variables.vue'\n\nconst { t } = useI18n()\nconst emit = defineEmits(['back', 'confirm'])\nconst props = defineProps({\n  data: { type: Object, default: () => { return {} } },\n  groups: { type: Array, default: undefined },\n  env: { type: Object, required: true }\n})\n\nconst settings = ref({})\nconst environment = ref(null)\n\nonMounted(async () => {\n  // prevent prop mutation by cloning to local state\n  // also ensure that whatever happens, this is at least some value\n  settings.value = props.data ? { ...props.data } : {}\n  environment.value = { ...props.env }\n\n  Object.keys(settings.value).map(setting => {\n    // ensure booleans are actually booleans\n    if (settings.value[setting].type === 'boolean') {\n      settings.value[setting].value =\n        settings.value[setting].value !== 'false' &&\n        settings.value[setting].value !== false\n    }\n  })\n})\n\nfunction updateSettings(event) {\n  settings.value = event.data\n}\n\nfunction canSubmit() {\n  for (let key in settings.value) {\n    if (settings.value[key].required) {\n      if (settings.value[key].internal) continue // we don't care about internal values here.\n      if (settings.value[key].type === 'boolean') continue // booleans are already forced true or false\n      if (settings.value[key].type === 'integer' && settings.value[key].value === 0) continue // js 0 is falsey, but it's a valid number for us\n      if (!settings.value[key].value) return false\n    }\n  }\n  return true\n}\n\nfunction confirm() {\n  emit('confirm', settings.value, environment.value)\n}\n</script>\n\n<template>\n  <div class=\"settings\">\n    <environment-config v-if=\"environment\" v-model=\"environment\" />\n    <variables :model-value=\"{ data: settings, groups }\" @update:modelValue=\"updateSettings\" />\n    <div v-if=\"Object.keys(settings).length === 0\" v-text=\"t('servers.NoSettings')\" />\n    <btn color=\"error\" @click=\"emit('back')\"><icon name=\"back\" />{{ t('common.Back') }}</btn>\n    <btn color=\"primary\" :disabled=\"!canSubmit()\" @click=\"confirm()\"><icon name=\"save\" />{{ t('servers.Create') }}</btn>\n  </div>\n</template>\n","<script setup>\nimport { ref, inject } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport SelectTemplate from '@/components/ui/serverCreateSteps/SelectTemplate.vue'\nimport Environment from '@/components/ui/serverCreateSteps/Environment.vue'\nimport Settings from '@/components/ui/serverCreateSteps/Settings.vue'\n\nconst router = useRouter()\nconst { t } = useI18n()\nconst api = inject('api')\nconst step = ref('environment')\nconst environment = ref({})\nconst users = ref([])\nconst template = ref({})\n\nfunction envConfirmed(name, nodeId, nodeOs, nodeArch, env, u) {\n  users.value = u\n  environment.value = { name, nodeId, nodeOs, nodeArch, env }\n  step.value = 'template'\n}\n\nfunction templateBack() {\n  environment.value = {}\n  users.value = []\n  step.value = 'environment'\n}\n\nfunction templateSelected(selected) {\n  if (!Array.isArray(selected.supportedEnvironments)) selected.supportedEnvironments = [selected.environment]\n  template.value = selected\n  step.value = 'settings'\n}\n\nfunction settingsBack() {\n  template.value = {}\n  step.value = 'template'\n}\n\nasync function settingsConfirmed(settings, envSettings) {\n  // last step confirmed, create server\n  const request = template.value\n  request.name = environment.value.name\n  request.node = environment.value.nodeId\n  request.environment = envSettings\n  request.users = users.value\n  request.data = {}\n  for (const setting in settings) {\n    request.data[setting] = settings[setting]\n\n    // fix value types\n    if (request.data[setting].type === 'boolean') {\n      request.data[setting].value =\n        request.data[setting].value !== 'false' &&\n        request.data[setting].value !== false\n    }\n\n    if (request.data[setting].type === 'integer') {\n      request.data[setting].value = Number(request.data[setting].value)\n    }\n  }\n\n  const id = await api.server.create(request)\n  router.push({ name: 'ServerView', params: { id }, query: { created: true } })\n}\n</script>\n\n<template>\n  <div class=\"servercreate\">\n    <h1 v-text=\"t('servers.Create')\" />\n    <div v-if=\"$api.auth.hasScope('nodes.view') && $api.auth.hasScope('templates.view')\">\n      <div :class=\"['progress', 'on-step-' + step]\">\n        <div :class=\"['step', 'step-environment', step === 'environment' ? 'step-current' : '']\" />\n        <div :class=\"['step', 'step-template', step === 'template' ? 'step-current' : '']\" />\n        <div :class=\"['step', 'step-settings', step === 'settings' ? 'step-current' : '']\" />\n      </div>\n      <Environment v-if=\"step === 'environment'\" :nouser=\"!$api.auth.hasScope('users.info.search')\" @confirm=\"envConfirmed\" />\n      <select-template\n        v-if=\"step === 'template'\"\n        :env=\"environment.env\"\n        :os=\"environment.nodeOs\"\n        :arch=\"environment.nodeArch\"\n        @back=\"templateBack()\"\n        @selected=\"templateSelected\"\n      />\n      <settings\n        v-if=\"step === 'settings'\"\n        :data=\"template.data\"\n        :groups=\"template.groups\"\n        :env=\"template.supportedEnvironments.filter(e => e.type === environment.env)[0]\"\n        @back=\"settingsBack()\"\n        @confirm=\"settingsConfirmed\"\n      />\n    </div>\n    <div v-else v-text=\"t('servers.CreateMissingPermissions')\" />\n  </div>\n</template>\n"],"names":[],"mappings":"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"}