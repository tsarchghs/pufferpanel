{"version":3,"file":"UserView-6673e955.js","sources":["../../src/views/UserView.vue"],"sourcesContent":["<script setup>\nimport { ref, inject, onMounted } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport Btn from '@/components/ui/Btn.vue'\nimport Icon from '@/components/ui/Icon.vue'\nimport TextField from '@/components/ui/TextField.vue'\nimport Toggle from '@/components/ui/Toggle.vue'\n\nconst { t, te, locale } = useI18n()\nconst route = useRoute()\nconst router = useRouter()\nconst api = inject('api')\nconst toast = inject('toast')\nconst validate = inject('validate')\nconst events = inject('events')\n\nconst username = ref('')\nconst email = ref('')\nconst password = ref('')\n\nconst usernameError = ref('')\nconst emailError = ref('')\nconst passwordError = ref('')\n\nfunction canSubmitDetails() {\n  return validate.username(username.value) &&\n    validate.email(email.value) &&\n    (validate.password(password.value) || password.value.length === 0)\n}\n\nasync function submitDetails() {\n  await api.user.update(route.params.id, {\n    username: username.value,\n    email: email.value,\n    password: password.value || undefined\n  })\n  toast.success(t('users.UpdateSuccess'))\n}\n\nasync function submitPermissions() {\n  if (!canSubmitDetails()) return false\n  await api.user.updatePermissions(route.params.id, { scopes: permissions.value })\n  toast.success(t('users.UpdateSuccess'))\n}\n\nasync function deleteUser() {\n  events.emit(\n    'confirm',\n    t('users.ConfirmDelete', { name: username.value }),\n    {\n      text: t('users.Delete'),\n      icon: 'remove',\n      color: 'error',\n      action: async () => {\n        await api.user.delete(route.params.id)\n        toast.success(t('users.DeleteSuccess'))\n        router.push({ name: 'UserList' })\n      }\n    },\n    {\n      color: 'primary'\n    }\n  )\n}\n\nconst scopes = {\n  general: [\n    'admin',\n    'login',\n    'self.edit',\n    'self.clients',\n    'settings.edit'\n  ],\n  servers: [\n    'server.create'\n  ],\n  nodes: [\n    'nodes.view',\n    'nodes.create',\n    'nodes.edit',\n    'nodes.deploy',\n    'nodes.delete'\n  ],\n  users: [\n    'users.info.search',\n    'users.info.view',\n    'users.info.edit',\n    'users.perms.view',\n    'users.perms.edit'\n  ],\n  templates: [\n    'templates.view',\n    'templates.local.edit',\n    'templates.repo.view',\n    'templates.repo.add',\n    'templates.repo.remove'\n  ]\n}\n\nconst permissions = ref([])\n\nonMounted(async () => {\n  const user = await api.user.get(route.params.id)\n  username.value = user.username\n  email.value = user.email\n  permissions.value = await api.user.getPermissions(route.params.id)\n})\n\nfunction scopeLabel(scope) {\n  return t('scopes.name.' + scope.replace(/\\./g, '-'))\n}\n\nfunction scopeHint(scope) {\n  if (te('scopes.hint.' + scope.replace(/\\./g, '-'), locale)) {\n    return t('scopes.hint.' + scope.replace(/\\./g, '-'))\n  }\n}\n\nfunction permissionCategoryHeading(category) {\n  const map = {\n    servers: 'servers.Servers',\n    nodes: 'nodes.Nodes',\n    users: 'users.Users',\n    templates: 'templates.Templates'\n  }\n  return t(map[category])\n}\n\nfunction permissionDisabled(scope) {\n  if (!api.auth.hasScope('user.perms.edit')) return true\n  if (scope === 'admin' && api.auth.hasScope('admin')) return false\n  if (scope === 'admin') return true\n\n  if (permissions.value.indexOf('admin') >= 0) return true\n  return !api.auth.hasScope(scope)\n}\n\nfunction togglePermission(scope) {\n  if (permissions.value.indexOf(scope) === -1) {\n    permissions.value = [...permissions.value, scope]\n  } else {\n    permissions.value = permissions.value.filter(e => e !== scope)\n  }\n}\n</script>\n\n<template>\n  <div class=\"userview\">\n    <div v-if=\"$api.auth.hasScope('users.info.view')\" class=\"details\">\n      <h1 v-text=\"t('users.Details')\" />\n      <form @submit.prevent=\"submitDetails()\">\n        <text-field\n          v-model=\"username\"\n          :label=\"t('users.Username')\"\n          icon=\"account\"\n          :error=\"usernameError\"\n          :disabled=\"!$api.auth.hasScope('users.info.edit')\"\n          @blur=\"usernameError = validate.username(username) ? '' : t('errors.ErrUsernameRequirements')\"\n        />\n        <text-field\n          v-model=\"email\"\n          :label=\"t('users.Email')\"\n          type=\"email\"\n          icon=\"email\"\n          :error=\"emailError\"\n          :disabled=\"!$api.auth.hasScope('users.info.edit')\"\n          @blur=\"emailError = validate.email(email) ? '' : t('errors.ErrEmailInvalid')\"\n        />\n        <text-field\n          v-if=\"$api.auth.hasScope('users.info.edit')\"\n          v-model=\"password\"\n          :label=\"t('users.Password')\"\n          type=\"password\"\n          icon=\"lock\"\n          :error=\"passwordError\"\n          @blur=\"passwordError = (validate.password(password) || password.length === 0) ? '' : t('error.PasswordInvalid')\"\n        />\n        <btn v-if=\"$api.auth.hasScope('users.info.edit')\" color=\"primary\" :disabled=\"!canSubmitDetails()\" @click=\"submitDetails()\"><icon name=\"save\" />{{ t('users.UpdateDetails') }}</btn>\n        <btn v-if=\"$api.auth.hasScope('users.info.edit')\" color=\"error\" @click=\"deleteUser()\"><icon name=\"remove\" />{{ t('users.Delete') }}</btn>\n      </form>\n    </div>\n\n    <div v-if=\"$api.auth.hasScope('users.perms.view')\" class=\"permissions\">\n      <h1 v-text=\"t('users.Permissions')\" />\n      <div v-for=\"(scopeCat, catName) in scopes\" :key=\"scopeCat\">\n        <h3 v-if=\"catName !== 'general'\" v-text=\"permissionCategoryHeading(catName)\" />\n        <toggle\n          v-for=\"scope in scopeCat\"\n          :key=\"scope\"\n          :model-value=\"permissions.indexOf(scope) >= 0\"\n          :disabled=\"permissionDisabled(scope)\"\n          :label=\"scopeLabel(scope)\"\n          :hint=\"scopeHint(scope)\"\n          @update:modelValue=\"togglePermission(scope)\"\n        />\n      </div>\n      <btn v-if=\"api.auth.hasScope('user.perms.edit')\" color=\"primary\" @click=\"submitPermissions()\"><icon name=\"save\" />{{ t('users.UpdatePermissions') }}</btn>\n    </div>\n  </div>\n</template>\n"],"names":[],"mappings":"maASA,KAAM,CAAE,IAAG,KAAI,UAAW,IACpB,EAAQ,IACR,EAAS,IACT,EAAM,EAAO,OACb,EAAQ,EAAO,SACf,EAAW,EAAO,YAClB,EAAS,EAAO,UAEhB,EAAW,EAAI,IACf,EAAQ,EAAI,IACZ,EAAW,EAAI,IAEf,EAAgB,EAAI,IACpB,EAAa,EAAI,IACjB,EAAgB,EAAI,IAE1B,YAA4B,CAC1B,MAAO,GAAS,SAAS,EAAS,QAChC,EAAS,MAAM,EAAM,QACpB,GAAS,SAAS,EAAS,QAAU,EAAS,MAAM,SAAW,GAGpE,kBAA+B,CAC7B,KAAM,GAAI,KAAK,OAAO,EAAM,OAAO,GAAI,CACrC,SAAU,EAAS,MACnB,MAAO,EAAM,MACb,SAAU,EAAS,OAAS,SAE9B,EAAM,QAAQ,EAAE,wBAGlB,kBAAmC,CACjC,GAAI,CAAC,IAAoB,MAAO,GAChC,KAAM,GAAI,KAAK,kBAAkB,EAAM,OAAO,GAAI,CAAE,OAAQ,EAAY,QACxE,EAAM,QAAQ,EAAE,wBAGlB,kBAA4B,CAC1B,EAAO,KACL,UACA,EAAE,sBAAuB,CAAE,KAAM,EAAS,QAC1C,CACE,KAAM,EAAE,gBACR,KAAM,SACN,MAAO,QACP,OAAQ,SAAY,CAClB,KAAM,GAAI,KAAK,OAAO,EAAM,OAAO,IACnC,EAAM,QAAQ,EAAE,wBAChB,EAAO,KAAK,CAAE,KAAM,eAGxB,CACE,MAAO,YAKb,KAAM,GAAS,CACb,QAAS,CACP,QACA,QACA,YACA,eACA,iBAEF,QAAS,CACP,iBAEF,MAAO,CACL,aACA,eACA,aACA,eACA,gBAEF,MAAO,CACL,oBACA,kBACA,kBACA,mBACA,oBAEF,UAAW,CACT,iBACA,uBACA,sBACA,qBACA,0BAIE,EAAc,EAAI,IAExB,EAAU,SAAY,CACpB,KAAM,GAAO,KAAM,GAAI,KAAK,IAAI,EAAM,OAAO,IAC7C,EAAS,MAAQ,EAAK,SACtB,EAAM,MAAQ,EAAK,MACnB,EAAY,MAAQ,KAAM,GAAI,KAAK,eAAe,EAAM,OAAO,MAGjE,WAAoB,EAAO,CACzB,MAAO,GAAE,eAAiB,EAAM,QAAQ,MAAO,MAGjD,WAAmB,EAAO,CACxB,GAAI,EAAG,eAAiB,EAAM,QAAQ,MAAO,KAAM,GACjD,MAAO,GAAE,eAAiB,EAAM,QAAQ,MAAO,MAInD,WAAmC,EAAU,CAO3C,MAAO,GAAE,AANG,CACV,QAAS,kBACT,MAAO,cACP,MAAO,cACP,UAAW,uBAEA,IAGf,WAA4B,EAAO,CACjC,MAAK,GAAI,KAAK,SAAS,mBACnB,IAAU,SAAW,EAAI,KAAK,SAAS,SAAiB,GACxD,IAAU,SAEV,EAAY,MAAM,QAAQ,UAAY,EAAU,GAC7C,CAAC,EAAI,KAAK,SAAS,GALwB,GAQpD,WAA0B,EAAO,CAC/B,AAAI,EAAY,MAAM,QAAQ,KAAW,GACvC,EAAY,MAAQ,CAAC,GAAG,EAAY,MAAO,GAE3C,EAAY,MAAQ,EAAY,MAAM,OAAO,GAAK,IAAM"}