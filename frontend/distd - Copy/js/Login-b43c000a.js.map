{"version":3,"file":"Login-b43c000a.js","sources":["../../src/views/Login.vue"],"sourcesContent":["<script setup>\nimport { ref, inject } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { useI18n } from 'vue-i18n'\nimport Overlay from '@/components/ui/Overlay.vue'\nimport TextField from '@/components/ui/TextField.vue'\nimport Btn from '@/components/ui/Btn.vue'\nimport defaultRoute from '@/router/defaultRoute'\n\nconst { t } = useI18n()\nconst api = inject('api')\nconst events = inject('events')\nconst validate = inject('validate')\nconst router = useRouter()\n\nconst email = ref('')\nconst emailError = ref(false)\nconst password = ref('')\nconst passwordError = ref(false)\nconst otpNeeded = ref(false)\nconst token = ref('')\n\nfunction loggedIn() {\n  try {\n    router.push(JSON.parse(sessionStorage.getItem('returnTo')))\n    sessionStorage.removeItem('returnTo')\n  } catch {\n    router.push(defaultRoute(api))\n  }\n  events.emit('login')\n}\n\nasync function login() {\n  const res = await api.auth.login(email.value, password.value)\n  if (res === true) {\n    loggedIn()\n  } else if (res === 'otp') {\n    otpNeeded.value = true\n  }\n}\n\nfunction resetOtp() {\n  otpNeeded.value = false\n  token.value = ''\n}\n\nasync function submitOtp() {\n  await api.auth.loginOtp(token.value)\n  loggedIn()\n}\n\nfunction validateEmail(onChange = false) {\n  if (!validate.email(email.value)) {\n    if (onChange === true) return\n    emailError.value = true\n  } else {\n    emailError.value = false\n  }\n}\n\nfunction emailErrorMsg() {\n  if (emailError.value) return t('errors.ErrEmailInvalid')\n}\n\nfunction validatePassword(onChange = false) {\n  if (!validate.password(password.value)) {\n    if (onChange === true) return\n    passwordError.value = true\n  } else {\n    passwordError.value = false\n  }\n}\n\nfunction passwordErrorMsg() {\n  if (passwordError.value) return t('errors.ErrPasswordRequirements')\n}\n</script>\n\n<template>\n  <div class=\"login\">\n    <h1 v-text=\"t('users.Login')\" />\n    <form @keydown.enter=\"login()\">\n      <text-field v-model=\"email\" type=\"email\" name=\"email\" :label=\"t('users.Email')\" :error=\"emailErrorMsg()\" icon=\"email\" autofocus @blur=\"validateEmail\" @change=\"validateEmail(true)\" />\n      <text-field v-model=\"password\" type=\"password\" name=\"password\" :label=\"t('users.Password')\" :error=\"passwordErrorMsg()\" icon=\"lock\" @blur=\"validatePassword\" @change=\"validatePassword(true)\" />\n      <btn color=\"primary\" :disabled=\"emailError || passwordError\" @click=\"login()\" v-text=\"t('users.Login')\" />\n      <btn v-if=\"$config.registrationEnabled\" variant=\"text\" @click=\"$router.push({ name: 'Register' })\" v-text=\"t('users.RegisterLink')\" />\n    </form>\n    <overlay v-model=\"otpNeeded\" :title=\"t('users.OtpNeeded')\" closable @close=\"resetOtp()\">\n      <text-field v-model=\"token\" autofocus />\n      <btn color=\"primary\" @click=\"submitOtp()\" v-text=\"t('users.Login')\" />\n    </overlay>\n  </div>\n</template>\n"],"names":[],"mappings":"uPASA,KAAM,CAAE,KAAM,IACR,EAAM,EAAO,OACb,EAAS,EAAO,UAChB,EAAW,EAAO,YAClB,EAAS,IAET,EAAQ,EAAI,IACZ,EAAa,EAAI,IACjB,EAAW,EAAI,IACf,EAAgB,EAAI,IACpB,EAAY,EAAI,IAChB,EAAQ,EAAI,IAElB,YAAoB,CAClB,GAAI,CACF,EAAO,KAAK,KAAK,MAAM,eAAe,QAAQ,cAC9C,eAAe,WAAW,iBAC1B,CACA,EAAO,KAAK,EAAa,IAE3B,EAAO,KAAK,SAGd,kBAAuB,CACrB,KAAM,GAAM,KAAM,GAAI,KAAK,MAAM,EAAM,MAAO,EAAS,OACvD,AAAI,IAAQ,GACV,IACS,IAAQ,OACjB,GAAU,MAAQ,IAItB,YAAoB,CAClB,EAAU,MAAQ,GAClB,EAAM,MAAQ,GAGhB,kBAA2B,CACzB,KAAM,GAAI,KAAK,SAAS,EAAM,OAC9B,IAGF,WAAuB,EAAW,GAAO,CACvC,GAAK,EAAS,MAAM,EAAM,OAIxB,EAAW,MAAQ,OAJa,CAChC,GAAI,IAAa,GAAM,OACvB,EAAW,MAAQ,IAMvB,YAAyB,CACvB,GAAI,EAAW,MAAO,MAAO,GAAE,0BAGjC,WAA0B,EAAW,GAAO,CAC1C,GAAK,EAAS,SAAS,EAAS,OAI9B,EAAc,MAAQ,OAJgB,CACtC,GAAI,IAAa,GAAM,OACvB,EAAc,MAAQ,IAM1B,YAA4B,CAC1B,GAAI,EAAc,MAAO,MAAO,GAAE"}