FROM ubuntu:20.04 as go

ARG aptproxy=""
ENV DEBIAN_FRONTEND=noninteractive

WORKDIR /home/pufferpanel/build

RUN if [ -n "${aptproxy}" ]; then echo "Acquire::http::Proxy \"http://${aptproxy}\";" > /etc/apt/apt.conf.d/00-apt-proxy; fi && \
    apt-get update && \
    apt-get install -y build-essential wget tar && \
    wget https://go.dev/dl/go1.22.3.linux-amd64.tar.gz && \
    rm -rf /usr/local/go && tar -C /usr/local -xzf go*.linux-amd64.tar.gz && \
    apt-get clean && \
    rm -rf /var/cache/apt/archives

ENV CGOENABLED=1
ENV PATH="$PATH:/usr/local/go/bin"

COPY go.mod go.sum ./
RUN go mod download && go mod verify

COPY . .

ARG GOPROXY=""
RUN go build -v -buildvcs=false -o /home/pufferpanel/templatetester github.com/tsarchghs/pufferpanel/tools/templatetester

FROM ubuntu:20.04 AS final

ENV DEBIAN_FRONTEND=noninteractive
ENV NODE_MAJOR=20

ARG aptproxy=""

RUN if [ -n "${aptproxy}" ]; then echo "Acquire::http::Proxy \"http://${aptproxy}\";" > /etc/apt/apt.conf.d/00-apt-proxy; fi && \
    apt-get update && \
    apt-get install -y dirmngr gnupg apt-transport-https ca-certificates software-properties-common curl && \
    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \
    apt-add-repository 'deb https://download.mono-project.com/repo/ubuntu stable-focal main' && \
    dpkg --add-architecture i386 && \
    mkdir -p /etc/apt/keyrings && \
    curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg && \
    echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list && \
    echo steam steam/question select "I AGREE" | debconf-set-selections && \
    echo steam steam/license note '' | debconf-set-selections && \
    apt-get update && \
    apt-get install -y wget build-essential zip unzip tar git xz-utils nodejs lib32gcc1 libstdc++6 libstdc++6:i386 libtinfo5:i386 libncurses5:i386 libcurl3-gnutls:i386 mono-complete steamcmd && \
    apt-get clean && \
    rm -rf /var/cache/apt/archives && \
    useradd pufferpanel && \
    mkdir /home/pufferpanel && \
    chown -R pufferpanel:pufferpanel /home/pufferpanel

WORKDIR /home/pufferpanel
COPY --from=go /home/pufferpanel/templatetester /home/pufferpanel/templatetester

USER pufferpanel

ENTRYPOINT ["./templatetester"]
CMD []